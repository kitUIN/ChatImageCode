plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}



repositories {
    mavenCentral()
    maven {
        name = 'clojars'
        url = "https://clojars.org/repo"
    }
}

dependencies {
    implementation('net.sf.image4j:image4j:0.7zensight1')
    implementation('com.squareup.okhttp3:okhttp:3.14.9')
    implementation('com.squareup.okio:okio:1.17.2')
    compileOnly ('com.google.guava:guava:31.0.1-jre')
    compileOnly ('com.google.code.gson:gson:2.8.9')
    implementation('com.madgag:animated-gif-lib:1.4')
}

test {
    useJUnitPlatform()
}


tasks.register('fatJar', Jar) {
    manifest.from jar.manifest
    archiveClassifier.set('')
    // destinationDir(new File("D:\\out"))
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

tasks.register('javadocJar', Jar) {
    from javadoc
    classifier = 'javadoc'
}

javadoc {
    options.addStringOption("charset", "UTF-8")
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId name
            groupId group
            version version
            artifact fatJar
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = project.name
                description = 'Lib for ChatImage'
                url = 'https://github.com/kitUIN/ChatImageCode'
                licenses {
                    license {
                        name = 'MIT'
                        url = ''
                    }
                }
                developers {
                    developer {
                        id = 'kitUIN'
                        name = 'kitUIN'
                        email = 'KIT_UIN@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/kitUIN/ChatImageCode.git'
                    developerConnection = 'scm:git:ssh://github.com/kitUIN/ChatImageCode.git'
                    url = 'https://github.com/kitUIN/ChatImageCode'
                }
            }
        }
    }
    repositories {
        maven {
            name = project.name
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            } else {
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    sign(publishing.publications.mavenJava)
}