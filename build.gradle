import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
buildscript {
    repositories {
        jcenter()
        gradlePluginPortal()
    }
}
plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'

    id 'com.github.johnrengelman.shadow' version '7.1.2'
}


apply plugin: 'com.github.johnrengelman.shadow'


repositories {
    mavenCentral()
    maven {
        name = 'clojars'
        url = "https://clojars.org/repo"
    }
}
configurations {
    shade
    implementation.extendsFrom shade
}
dependencies {
    shade 'net.sf.image4j:image4j:0.7zensight1'
    shade 'com.squareup.okhttp3:okhttp:3.14.9'
    shade 'com.squareup.okio:okio:1.17.2'
    shade 'com.madgag:animated-gif-lib:1.4'
    compileOnly 'com.google.guava:guava:31.0.1-jre'
    compileOnly 'com.google.code.gson:gson:2.8.9'
    compileOnly 'commons-io:commons-io:2.5'

}


tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allJava
    archiveClassifier  = 'sources'
}

tasks.register('javadocJar', Jar) {
    from javadoc
    archiveClassifier  = 'javadoc'
}

shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    relocate "net.sf.image4j", "chatimage.net.sf.image4j"
    relocate "okhttp3", "chatimage.okhttp3"
    relocate "okio", "chatimage.okio"
    relocate "com.madgag.gif.fmsware", "chatimage.com.madgag.gif.fmsware"
    // destinationDirectory = file("D:/IdeaProjects/ChatImage-fabric-1.16/libs")
}

assemble.dependsOn shadowJar


test {
    useJUnitPlatform()
}


//tasks.register('fatJar', Jar) {
//    manifest.from jar.manifest
//    archiveClassifier.set('')
//    // destinationDir(new File("D:\\out"))
//    from {
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    } {
//        exclude "META-INF/*.SF"
//        exclude "META-INF/*.DSA"
//        exclude "META-INF/*.RSA"
//    }
//    with jar
//}
//tasks.register('javaDoc', Javadoc) {
//    delete("javadoc/") // 清理旧的 javadoc
//
//    options {
//        encoding('UTF-8') //支持中文，避免乱码
//        charSet('UTF-8') //支持中文，避免乱码
//        memberLevel = JavadocMemberLevel.PUBLIC //保留 public 的方法
//        linkSource true
//        author false //是否保留作者
//        noTree true //是否生成树状结构
//        noIndex true
//        noNavBar true
//    }
//
//    source = sourceSets.main.allJava
//    classpath += configurations.compile
//    //classpath += files({ project(':你的模块名').sourceSets.main.compileClasspath })
//    destinationDir = file("javadoc/")
//
//    failOnError false
//}



javadoc {
    options.addStringOption("charset", "UTF-8")
    options.addStringOption("encoding", "UTF-8")
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.name
            groupId group
            version version
            artifact shadowJar
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = project.name
                description = 'Lib for ChatImage'
                url = 'https://github.com/kitUIN/ChatImageCode'
                licenses {
                    license {
                        name = 'MIT'
                        url = ''
                    }
                }
                developers {
                    developer {
                        id = 'kitUIN'
                        name = 'kitUIN'
                        email = 'KIT_UIN@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/kitUIN/ChatImageCode.git'
                    developerConnection = 'scm:git:ssh://github.com/kitUIN/ChatImageCode.git'
                    url = 'https://github.com/kitUIN/ChatImageCode'
                }
            }
        }
    }
    repositories {
        maven {
            name = project.name
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = "https://maven.kituin.fun/snapshots"
            } else {
                url = "https://maven.kituin.fun/releases"
            }
            credentials {
                username = findProperty("user") ?: System.getenv("KITUIN_USERNAME")
                password = findProperty("pwd") ?: System.getenv("KITUIN_PASSWORD")
            }
        }
    }
}

signing {
    sign(publishing.publications.mavenJava)
}